 macro =>                                                   function=>                 
1. it is pre processed.                             1. It is compiled.
2. no type checking is done in macro.               2. type checking is done in function.
3. macro is faster than function.                   3. it is slower than macro.
4. it has limited code length.                      4. code length is not limited.
5. it cannot call itself.                           5. function can call itself.                                                          
                                                        
#include<stdio.h>                                       #include<stdio.h>
#define SQUARE(a) (a)*(a)                               int squarenum(int a);

int main(){                                             int main()
                                                        {
    int x,y;                                                int x,y;

    printf("Enter any number");                             printf("Enter any  number\n");   
    scanf("%d",&x);                                         scanf("%d",&x);

    y=SQUARE(x);                                            y=squarenum(x);

    printf("%d is the square of given number\n",y);         }

    return 0;                                                  int squarenum(int a)
}
                                                                {

                                                                    int squrta;
                                                                    squrta=a*a;
                                                                    return (squrta);

                                                                }



efficient memory utilization by allocating and freeing memory during runtime.
the process of allocating and freeing a memory during runtime is known as dnamic memory allocation.









    
    
    

    


    

    
    
    
